# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Grade < Formula
  desc "grade transforms Go benchmark data into various format so that you can uploads the data to a database and track the performance over time."
  homepage "https://github.com/sv-tools/grade"
  version "1.5.0"
  license "MIT"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/sv-tools/grade/releases/download/v1.5.0/grade-v1.5.0-darwin-amd64.tar.gz"
      sha256 "3d9c919596406556df123f4dc751d2803298c7ee96500a497e36e6fa5867326b"
    end
    if Hardware::CPU.arm?
      url "https://github.com/sv-tools/grade/releases/download/v1.5.0/grade-v1.5.0-darwin-arm64.tar.gz"
      sha256 "512c0b185f5bd7f14657d955987cf908626519faaedd5ef1b91613994f16ecb4"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/sv-tools/grade/releases/download/v1.5.0/grade-v1.5.0-linux-amd64.tar.gz"
      sha256 "d14a84f11f54289cd352790ed5b06d52327c1ce191517f44d8315281a535e356"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/sv-tools/grade/releases/download/v1.5.0/grade-v1.5.0-linux-arm64.tar.gz"
      sha256 "41dbf483c7674d0781e2a69e01732cf5691b8fa0d4405d113571b390241ca038"
    end
  end

  def install
    bin.install "grade"
  end

  test do
    assert_equal `#{bin}/grade --version`, "grade version v#{version}"
  end
end
